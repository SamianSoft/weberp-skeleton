// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`StageComponent should render correctly with no props 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DropDown />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "attachment": "top center",
      "constraints": Array [
        Object {
          "attachment": "together",
          "to": "window",
        },
      ],
      "renderElement": [Function],
      "renderElementTag": "div",
      "renderElementTo": null,
      "renderTarget": [Function],
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "attachment": "top center",
        "constraints": Array [
          Object {
            "attachment": "together",
            "to": "window",
          },
        ],
        "renderElement": [Function],
        "renderElementTag": "div",
        "renderElementTo": null,
        "renderTarget": [Function],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;

exports[`StageComponent should render stage items correctly with given data 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DropDown
    data={
      Array [
        Object {
          "color": "#FDFDFD",
          "key": "test1",
          "priority": 1,
          "tickWhenPass": true,
          "title": "test1",
        },
        Object {
          "color": "#000",
          "key": "test2",
          "priority": 2,
          "tickWhenPass": false,
          "title": "test2",
        },
        Object {
          "color": "green",
          "key": "test3",
          "priority": 3,
          "tickWhenPass": true,
          "title": "test3",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "attachment": "top center",
      "constraints": Array [
        Object {
          "attachment": "together",
          "to": "window",
        },
      ],
      "renderElement": [Function],
      "renderElementTag": "div",
      "renderElementTo": null,
      "renderTarget": [Function],
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "attachment": "top center",
        "constraints": Array [
          Object {
            "attachment": "together",
            "to": "window",
          },
        ],
        "renderElement": [Function],
        "renderElementTag": "div",
        "renderElementTo": null,
        "renderTarget": [Function],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
