// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`StageComponent should render correctly with no props 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Stage />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <ForwardRef(styled.div)>
          <ForwardRef(styled.div) />
          <ForwardRef(styled.div)>
            <button
              onClick={[Function]}
              style={
                Object {
                  "background": "transparent",
                  "border": "none",
                  "cursor": "pointer",
                  "fontSize": "25px",
                  "marginLeft": ".5rem",
                }
              }
            >
              &lt;
            </button>
            <button
              onClick={[Function]}
              style={
                Object {
                  "background": "transparent",
                  "border": "none",
                  "cursor": "pointer",
                  "fontSize": "25px",
                }
              }
            >
              &gt;
            </button>
          </ForwardRef(styled.div)>
        </ForwardRef(styled.div)>,
        <ForwardRef(styled.div)>
          <ForwardRef(styled.div)>
            Sep,16, 2021
          </ForwardRef(styled.div)>
          <div
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "space-between",
                "width": "100px",
              }
            }
          >
            <div
              onClick={[Function]}
              style={
                Object {
                  "cursor": "pointer",
                }
              }
            >
              <ArrowDownIcon />
            </div>
            <ForwardRef(styled.div)>
              Sep,18, 2021
            </ForwardRef(styled.div)>
          </div>
        </ForwardRef(styled.div)>,
      ],
      "dir": undefined,
      "width": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ForwardRef(styled.div) />,
            <ForwardRef(styled.div)>
              <button
                onClick={[Function]}
                style={
                  Object {
                    "background": "transparent",
                    "border": "none",
                    "cursor": "pointer",
                    "fontSize": "25px",
                    "marginLeft": ".5rem",
                  }
                }
              >
                &lt;
              </button>
              <button
                onClick={[Function]}
                style={
                  Object {
                    "background": "transparent",
                    "border": "none",
                    "cursor": "pointer",
                    "fontSize": "25px",
                  }
                }
              >
                &gt;
              </button>
            </ForwardRef(styled.div)>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": undefined,
            },
            "ref": Object {
              "current": null,
            },
            "rendered": null,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": e {
                "baseHash": 1403459420,
                "baseStyle": undefined,
                "componentId": "sc-dlnjwi",
                "isStatic": false,
                "rules": Array [
                  "
  display: flex;
  align-items: start;
  justify-content: start;
  background-color: transparent;
  width: 91%;
  // height: 15rem;
  overflow-x: auto;
  overflow-y: hidden;
    -webkit-overflow-scrolling: touch;
  -ms-overflow-style: none;
  scrollbar-width: none;
  scroll-behavior: smooth;
  &::-webkit-scrollbar {
    display: none;
  }
",
                ],
                "staticRulesId": "",
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "shouldForwardProp": undefined,
              "styledComponentId": "sc-dlnjwi",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <button
                  onClick={[Function]}
                  style={
                    Object {
                      "background": "transparent",
                      "border": "none",
                      "cursor": "pointer",
                      "fontSize": "25px",
                      "marginLeft": ".5rem",
                    }
                  }
                >
                  &lt;
                </button>,
                <button
                  onClick={[Function]}
                  style={
                    Object {
                      "background": "transparent",
                      "border": "none",
                      "cursor": "pointer",
                      "fontSize": "25px",
                    }
                  }
                >
                  &gt;
                </button>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "<",
                  "onClick": [Function],
                  "style": Object {
                    "background": "transparent",
                    "border": "none",
                    "cursor": "pointer",
                    "fontSize": "25px",
                    "marginLeft": ".5rem",
                  },
                },
                "ref": null,
                "rendered": "<",
                "type": "button",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": ">",
                  "onClick": [Function],
                  "style": Object {
                    "background": "transparent",
                    "border": "none",
                    "cursor": "pointer",
                    "fontSize": "25px",
                  },
                },
                "ref": null,
                "rendered": ">",
                "type": "button",
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": e {
                "baseHash": -212392731,
                "baseStyle": undefined,
                "componentId": "sc-iCoGMd",
                "isStatic": false,
                "rules": Array [
                  "
  color: #000;
  display: flex;
  align-items: center;
  margin-top: 1rem;
  justify-content: space-between;
",
                ],
                "staticRulesId": "",
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "shouldForwardProp": undefined,
              "styledComponentId": "sc-iCoGMd",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": e {
            "baseHash": -1974253024,
            "baseStyle": undefined,
            "componentId": "sc-gtsrHT",
            "isStatic": false,
            "rules": Array [
              "
  display: flex;
  align-items: start;
  justify-content: space-between;
  background-color: transparent;
  width: 98%;
  height: auto;
  padding: 5px;
",
            ],
            "staticRulesId": "",
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "shouldForwardProp": undefined,
          "styledComponentId": "sc-gtsrHT",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ForwardRef(styled.div)>
              Sep,16, 2021
            </ForwardRef(styled.div)>,
            <div
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "space-between",
                  "width": "100px",
                }
              }
            >
              <div
                onClick={[Function]}
                style={
                  Object {
                    "cursor": "pointer",
                  }
                }
              >
                <ArrowDownIcon />
              </div>
              <ForwardRef(styled.div)>
                Sep,18, 2021
              </ForwardRef(styled.div)>
            </div>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Sep,16, 2021",
            },
            "ref": null,
            "rendered": "Sep,16, 2021",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": e {
                "baseHash": -852178699,
                "baseStyle": undefined,
                "componentId": "sc-jSFjdj",
                "isStatic": false,
                "rules": Array [
                  "
  font-size: 15px;
",
                ],
                "staticRulesId": "",
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "shouldForwardProp": undefined,
              "styledComponentId": "sc-jSFjdj",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  onClick={[Function]}
                  style={
                    Object {
                      "cursor": "pointer",
                    }
                  }
                >
                  <ArrowDownIcon />
                </div>,
                <ForwardRef(styled.div)>
                  Sep,18, 2021
                </ForwardRef(styled.div)>,
              ],
              "style": Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "space-between",
                "width": "100px",
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <ArrowDownIcon />,
                  "onClick": [Function],
                  "style": Object {
                    "cursor": "pointer",
                  },
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "Sep,18, 2021",
                },
                "ref": null,
                "rendered": "Sep,18, 2021",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": e {
                    "baseHash": -852178699,
                    "baseStyle": undefined,
                    "componentId": "sc-jSFjdj",
                    "isStatic": false,
                    "rules": Array [
                      "
  font-size: 15px;
",
                    ],
                    "staticRulesId": "",
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "shouldForwardProp": undefined,
                  "styledComponentId": "sc-jSFjdj",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
            ],
            "type": "div",
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": e {
            "baseHash": -1076222668,
            "baseStyle": undefined,
            "componentId": "sc-eCApnc",
            "isStatic": false,
            "rules": Array [
              "
  display: flex;
  margin: 1.5rem 0;
  align-items: center;
  justify-content: space-between;
  background-color: transparent;
  width: 98%;
  height: auto;
  padding: 5px;
  color: #000;
",
            ],
            "staticRulesId": "",
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "shouldForwardProp": undefined,
          "styledComponentId": "sc-eCApnc",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": e {
        "baseHash": -715527839,
        "baseStyle": undefined,
        "componentId": "sc-bdnxRM",
        "isStatic": false,
        "rules": Array [
          "
  direction: ",
          [Function],
          ";
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background-color: transparent;
  width: ",
          [Function],
          ";
  padding: 0 20px;
  min-height: 150px;
  height: auto;
  border-radius: 0.5rem;
  box-shadow: rgba(234, 234, 238, 0.4) 0px 7px 29px 0px;
",
        ],
        "staticRulesId": "",
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "shouldForwardProp": undefined,
      "styledComponentId": "sc-bdnxRM",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef(styled.div)>
            <ForwardRef(styled.div) />
            <ForwardRef(styled.div)>
              <button
                onClick={[Function]}
                style={
                  Object {
                    "background": "transparent",
                    "border": "none",
                    "cursor": "pointer",
                    "fontSize": "25px",
                    "marginLeft": ".5rem",
                  }
                }
              >
                &lt;
              </button>
              <button
                onClick={[Function]}
                style={
                  Object {
                    "background": "transparent",
                    "border": "none",
                    "cursor": "pointer",
                    "fontSize": "25px",
                  }
                }
              >
                &gt;
              </button>
            </ForwardRef(styled.div)>
          </ForwardRef(styled.div)>,
          <ForwardRef(styled.div)>
            <ForwardRef(styled.div)>
              Sep,16, 2021
            </ForwardRef(styled.div)>
            <div
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "space-between",
                  "width": "100px",
                }
              }
            >
              <div
                onClick={[Function]}
                style={
                  Object {
                    "cursor": "pointer",
                  }
                }
              >
                <ArrowDownIcon />
              </div>
              <ForwardRef(styled.div)>
                Sep,18, 2021
              </ForwardRef(styled.div)>
            </div>
          </ForwardRef(styled.div)>,
        ],
        "dir": undefined,
        "width": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ForwardRef(styled.div) />,
              <ForwardRef(styled.div)>
                <button
                  onClick={[Function]}
                  style={
                    Object {
                      "background": "transparent",
                      "border": "none",
                      "cursor": "pointer",
                      "fontSize": "25px",
                      "marginLeft": ".5rem",
                    }
                  }
                >
                  &lt;
                </button>
                <button
                  onClick={[Function]}
                  style={
                    Object {
                      "background": "transparent",
                      "border": "none",
                      "cursor": "pointer",
                      "fontSize": "25px",
                    }
                  }
                >
                  &gt;
                </button>
              </ForwardRef(styled.div)>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": undefined,
              },
              "ref": Object {
                "current": null,
              },
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": e {
                  "baseHash": 1403459420,
                  "baseStyle": undefined,
                  "componentId": "sc-dlnjwi",
                  "isStatic": false,
                  "rules": Array [
                    "
  display: flex;
  align-items: start;
  justify-content: start;
  background-color: transparent;
  width: 91%;
  // height: 15rem;
  overflow-x: auto;
  overflow-y: hidden;
    -webkit-overflow-scrolling: touch;
  -ms-overflow-style: none;
  scrollbar-width: none;
  scroll-behavior: smooth;
  &::-webkit-scrollbar {
    display: none;
  }
",
                  ],
                  "staticRulesId": "",
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "shouldForwardProp": undefined,
                "styledComponentId": "sc-dlnjwi",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <button
                    onClick={[Function]}
                    style={
                      Object {
                        "background": "transparent",
                        "border": "none",
                        "cursor": "pointer",
                        "fontSize": "25px",
                        "marginLeft": ".5rem",
                      }
                    }
                  >
                    &lt;
                  </button>,
                  <button
                    onClick={[Function]}
                    style={
                      Object {
                        "background": "transparent",
                        "border": "none",
                        "cursor": "pointer",
                        "fontSize": "25px",
                      }
                    }
                  >
                    &gt;
                  </button>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "<",
                    "onClick": [Function],
                    "style": Object {
                      "background": "transparent",
                      "border": "none",
                      "cursor": "pointer",
                      "fontSize": "25px",
                      "marginLeft": ".5rem",
                    },
                  },
                  "ref": null,
                  "rendered": "<",
                  "type": "button",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": ">",
                    "onClick": [Function],
                    "style": Object {
                      "background": "transparent",
                      "border": "none",
                      "cursor": "pointer",
                      "fontSize": "25px",
                    },
                  },
                  "ref": null,
                  "rendered": ">",
                  "type": "button",
                },
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": e {
                  "baseHash": -212392731,
                  "baseStyle": undefined,
                  "componentId": "sc-iCoGMd",
                  "isStatic": false,
                  "rules": Array [
                    "
  color: #000;
  display: flex;
  align-items: center;
  margin-top: 1rem;
  justify-content: space-between;
",
                  ],
                  "staticRulesId": "",
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "shouldForwardProp": undefined,
                "styledComponentId": "sc-iCoGMd",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": e {
              "baseHash": -1974253024,
              "baseStyle": undefined,
              "componentId": "sc-gtsrHT",
              "isStatic": false,
              "rules": Array [
                "
  display: flex;
  align-items: start;
  justify-content: space-between;
  background-color: transparent;
  width: 98%;
  height: auto;
  padding: 5px;
",
              ],
              "staticRulesId": "",
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "shouldForwardProp": undefined,
            "styledComponentId": "sc-gtsrHT",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ForwardRef(styled.div)>
                Sep,16, 2021
              </ForwardRef(styled.div)>,
              <div
                style={
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "space-between",
                    "width": "100px",
                  }
                }
              >
                <div
                  onClick={[Function]}
                  style={
                    Object {
                      "cursor": "pointer",
                    }
                  }
                >
                  <ArrowDownIcon />
                </div>
                <ForwardRef(styled.div)>
                  Sep,18, 2021
                </ForwardRef(styled.div)>
              </div>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Sep,16, 2021",
              },
              "ref": null,
              "rendered": "Sep,16, 2021",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": e {
                  "baseHash": -852178699,
                  "baseStyle": undefined,
                  "componentId": "sc-jSFjdj",
                  "isStatic": false,
                  "rules": Array [
                    "
  font-size: 15px;
",
                  ],
                  "staticRulesId": "",
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "shouldForwardProp": undefined,
                "styledComponentId": "sc-jSFjdj",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    onClick={[Function]}
                    style={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                  >
                    <ArrowDownIcon />
                  </div>,
                  <ForwardRef(styled.div)>
                    Sep,18, 2021
                  </ForwardRef(styled.div)>,
                ],
                "style": Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "space-between",
                  "width": "100px",
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <ArrowDownIcon />,
                    "onClick": [Function],
                    "style": Object {
                      "cursor": "pointer",
                    },
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "Sep,18, 2021",
                  },
                  "ref": null,
                  "rendered": "Sep,18, 2021",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": e {
                      "baseHash": -852178699,
                      "baseStyle": undefined,
                      "componentId": "sc-jSFjdj",
                      "isStatic": false,
                      "rules": Array [
                        "
  font-size: 15px;
",
                      ],
                      "staticRulesId": "",
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "shouldForwardProp": undefined,
                    "styledComponentId": "sc-jSFjdj",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
              ],
              "type": "div",
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": e {
              "baseHash": -1076222668,
              "baseStyle": undefined,
              "componentId": "sc-eCApnc",
              "isStatic": false,
              "rules": Array [
                "
  display: flex;
  margin: 1.5rem 0;
  align-items: center;
  justify-content: space-between;
  background-color: transparent;
  width: 98%;
  height: auto;
  padding: 5px;
  color: #000;
",
              ],
              "staticRulesId": "",
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "shouldForwardProp": undefined,
            "styledComponentId": "sc-eCApnc",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": e {
          "baseHash": -715527839,
          "baseStyle": undefined,
          "componentId": "sc-bdnxRM",
          "isStatic": false,
          "rules": Array [
            "
  direction: ",
            [Function],
            ";
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background-color: transparent;
  width: ",
            [Function],
            ";
  padding: 0 20px;
  min-height: 150px;
  height: auto;
  border-radius: 0.5rem;
  box-shadow: rgba(234, 234, 238, 0.4) 0px 7px 29px 0px;
",
          ],
          "staticRulesId": "",
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "shouldForwardProp": undefined,
        "styledComponentId": "sc-bdnxRM",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;

exports[`StageComponent should render stage items correctly with given data 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Stage
    data={
      Array [
        Object {
          "color": "#FDFDFD",
          "key": "test1",
          "priority": 1,
          "tickWhenPass": true,
          "title": "test1",
        },
        Object {
          "color": "#000",
          "key": "test2",
          "priority": 2,
          "tickWhenPass": false,
          "title": "test2",
        },
        Object {
          "color": "green",
          "key": "test3",
          "priority": 3,
          "tickWhenPass": true,
          "title": "test3",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <ForwardRef(styled.div)>
          <ForwardRef(styled.div)>
            <ForwardRef(styled.div)
              className=""
              color="#FDFDFD"
              onClick={[Function]}
            >
              <span
                style={
                  Object {
                    "fontSize": "14px",
                    "textAlign": "end",
                  }
                }
              >
                test1
              </span>
            </ForwardRef(styled.div)>
            <ForwardRef(styled.div)
              className=""
              color="#000"
              onClick={[Function]}
            >
              <span
                style={
                  Object {
                    "fontSize": "14px",
                    "textAlign": "end",
                  }
                }
              >
                test2
              </span>
            </ForwardRef(styled.div)>
            <ForwardRef(styled.div)
              className=""
              color="green"
              onClick={[Function]}
            >
              <span
                style={
                  Object {
                    "fontSize": "14px",
                    "textAlign": "end",
                  }
                }
              >
                test3
              </span>
            </ForwardRef(styled.div)>
          </ForwardRef(styled.div)>
          <ForwardRef(styled.div)>
            <button
              onClick={[Function]}
              style={
                Object {
                  "background": "transparent",
                  "border": "none",
                  "cursor": "pointer",
                  "fontSize": "25px",
                  "marginLeft": ".5rem",
                }
              }
            >
              &lt;
            </button>
            <button
              onClick={[Function]}
              style={
                Object {
                  "background": "transparent",
                  "border": "none",
                  "cursor": "pointer",
                  "fontSize": "25px",
                }
              }
            >
              &gt;
            </button>
          </ForwardRef(styled.div)>
        </ForwardRef(styled.div)>,
        <ForwardRef(styled.div)>
          <ForwardRef(styled.div)>
            Sep,16, 2021
          </ForwardRef(styled.div)>
          <div
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "space-between",
                "width": "100px",
              }
            }
          >
            <div
              onClick={[Function]}
              style={
                Object {
                  "cursor": "pointer",
                }
              }
            >
              <ArrowDownIcon />
            </div>
            <ForwardRef(styled.div)>
              Sep,18, 2021
            </ForwardRef(styled.div)>
          </div>
        </ForwardRef(styled.div)>,
      ],
      "dir": undefined,
      "width": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ForwardRef(styled.div)>
              <ForwardRef(styled.div)
                className=""
                color="#FDFDFD"
                onClick={[Function]}
              >
                <span
                  style={
                    Object {
                      "fontSize": "14px",
                      "textAlign": "end",
                    }
                  }
                >
                  test1
                </span>
              </ForwardRef(styled.div)>
              <ForwardRef(styled.div)
                className=""
                color="#000"
                onClick={[Function]}
              >
                <span
                  style={
                    Object {
                      "fontSize": "14px",
                      "textAlign": "end",
                    }
                  }
                >
                  test2
                </span>
              </ForwardRef(styled.div)>
              <ForwardRef(styled.div)
                className=""
                color="green"
                onClick={[Function]}
              >
                <span
                  style={
                    Object {
                      "fontSize": "14px",
                      "textAlign": "end",
                    }
                  }
                >
                  test3
                </span>
              </ForwardRef(styled.div)>
            </ForwardRef(styled.div)>,
            <ForwardRef(styled.div)>
              <button
                onClick={[Function]}
                style={
                  Object {
                    "background": "transparent",
                    "border": "none",
                    "cursor": "pointer",
                    "fontSize": "25px",
                    "marginLeft": ".5rem",
                  }
                }
              >
                &lt;
              </button>
              <button
                onClick={[Function]}
                style={
                  Object {
                    "background": "transparent",
                    "border": "none",
                    "cursor": "pointer",
                    "fontSize": "25px",
                  }
                }
              >
                &gt;
              </button>
            </ForwardRef(styled.div)>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <ForwardRef(styled.div)
                  className=""
                  color="#FDFDFD"
                  onClick={[Function]}
                >
                  <span
                    style={
                      Object {
                        "fontSize": "14px",
                        "textAlign": "end",
                      }
                    }
                  >
                    test1
                  </span>
                </ForwardRef(styled.div)>,
                <ForwardRef(styled.div)
                  className=""
                  color="#000"
                  onClick={[Function]}
                >
                  <span
                    style={
                      Object {
                        "fontSize": "14px",
                        "textAlign": "end",
                      }
                    }
                  >
                    test2
                  </span>
                </ForwardRef(styled.div)>,
                <ForwardRef(styled.div)
                  className=""
                  color="green"
                  onClick={[Function]}
                >
                  <span
                    style={
                      Object {
                        "fontSize": "14px",
                        "textAlign": "end",
                      }
                    }
                  >
                    test3
                  </span>
                </ForwardRef(styled.div)>,
              ],
            },
            "ref": Object {
              "current": null,
            },
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    undefined,
                    <span
                      style={
                        Object {
                          "fontSize": "14px",
                          "textAlign": "end",
                        }
                      }
                    >
                      test1
                    </span>,
                    undefined,
                  ],
                  "className": "",
                  "color": "#FDFDFD",
                  "dir": undefined,
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Array [
                  undefined,
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "test1",
                      "style": Object {
                        "fontSize": "14px",
                        "textAlign": "end",
                      },
                    },
                    "ref": null,
                    "rendered": "test1",
                    "type": "span",
                  },
                  undefined,
                ],
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": e {
                    "baseHash": -417256348,
                    "baseStyle": undefined,
                    "componentId": "sc-hKFxyN",
                    "isStatic": false,
                    "rules": Array [
                      "
  display: flex;
  align-items: center;
  justify-content: space-around;
  padding: 0 25px;
  min-width: 235px;
  width: auto;
  height: 40px;
  font-size: 20px;
  text-align: center;
  position: relative;
  color: #000;
  background: lightgray;
  margin-right: .6rem;
  cursor: pointer;
  &.active{
    background-color: #1D83FD;
    color: #fff;
    &:after {
      ",
                      [Function],
                      "
    }

    &:before {
      ",
                      [Function],
                      "
     } 

     &:first-child{
      &:before {
        ",
                      [Function],
                      "
      }
    }
  
    &:first-child{
      &:after {
        ",
                      [Function],
                      "
      }
    }
  


  }


  &.passed{
    background-color: ",
                      [Function],
                      ";
    color: #fff;
    &:after {
      ",
                      [Function],
                      "
    }

    &:before {
      ",
                      [Function],
                      "
     } 

     &:first-child{
      &:before {
        ",
                      [Function],
                      "
      }
    }
  
    &:first-child{
      &:after {
        ",
                      [Function],
                      "
      }
    }
  


  }
  &:after {
    ",
                      [Function],
                      "
    
    }
  }

 &:before {
  ",
                      [Function],
                      "
 } 

  &:first-child{
    &:before {
      ",
                      [Function],
                      "
    }
  }

  &:first-child{
    &:after {
      ",
                      [Function],
                      "
    }
  }

 

  
",
                    ],
                    "staticRulesId": "",
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "shouldForwardProp": undefined,
                  "styledComponentId": "sc-hKFxyN",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    undefined,
                    <span
                      style={
                        Object {
                          "fontSize": "14px",
                          "textAlign": "end",
                        }
                      }
                    >
                      test2
                    </span>,
                    undefined,
                  ],
                  "className": "",
                  "color": "#000",
                  "dir": undefined,
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Array [
                  undefined,
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "test2",
                      "style": Object {
                        "fontSize": "14px",
                        "textAlign": "end",
                      },
                    },
                    "ref": null,
                    "rendered": "test2",
                    "type": "span",
                  },
                  undefined,
                ],
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": e {
                    "baseHash": -417256348,
                    "baseStyle": undefined,
                    "componentId": "sc-hKFxyN",
                    "isStatic": false,
                    "rules": Array [
                      "
  display: flex;
  align-items: center;
  justify-content: space-around;
  padding: 0 25px;
  min-width: 235px;
  width: auto;
  height: 40px;
  font-size: 20px;
  text-align: center;
  position: relative;
  color: #000;
  background: lightgray;
  margin-right: .6rem;
  cursor: pointer;
  &.active{
    background-color: #1D83FD;
    color: #fff;
    &:after {
      ",
                      [Function],
                      "
    }

    &:before {
      ",
                      [Function],
                      "
     } 

     &:first-child{
      &:before {
        ",
                      [Function],
                      "
      }
    }
  
    &:first-child{
      &:after {
        ",
                      [Function],
                      "
      }
    }
  


  }


  &.passed{
    background-color: ",
                      [Function],
                      ";
    color: #fff;
    &:after {
      ",
                      [Function],
                      "
    }

    &:before {
      ",
                      [Function],
                      "
     } 

     &:first-child{
      &:before {
        ",
                      [Function],
                      "
      }
    }
  
    &:first-child{
      &:after {
        ",
                      [Function],
                      "
      }
    }
  


  }
  &:after {
    ",
                      [Function],
                      "
    
    }
  }

 &:before {
  ",
                      [Function],
                      "
 } 

  &:first-child{
    &:before {
      ",
                      [Function],
                      "
    }
  }

  &:first-child{
    &:after {
      ",
                      [Function],
                      "
    }
  }

 

  
",
                    ],
                    "staticRulesId": "",
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "shouldForwardProp": undefined,
                  "styledComponentId": "sc-hKFxyN",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    undefined,
                    <span
                      style={
                        Object {
                          "fontSize": "14px",
                          "textAlign": "end",
                        }
                      }
                    >
                      test3
                    </span>,
                    undefined,
                  ],
                  "className": "",
                  "color": "green",
                  "dir": undefined,
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Array [
                  undefined,
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "test3",
                      "style": Object {
                        "fontSize": "14px",
                        "textAlign": "end",
                      },
                    },
                    "ref": null,
                    "rendered": "test3",
                    "type": "span",
                  },
                  undefined,
                ],
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": e {
                    "baseHash": -417256348,
                    "baseStyle": undefined,
                    "componentId": "sc-hKFxyN",
                    "isStatic": false,
                    "rules": Array [
                      "
  display: flex;
  align-items: center;
  justify-content: space-around;
  padding: 0 25px;
  min-width: 235px;
  width: auto;
  height: 40px;
  font-size: 20px;
  text-align: center;
  position: relative;
  color: #000;
  background: lightgray;
  margin-right: .6rem;
  cursor: pointer;
  &.active{
    background-color: #1D83FD;
    color: #fff;
    &:after {
      ",
                      [Function],
                      "
    }

    &:before {
      ",
                      [Function],
                      "
     } 

     &:first-child{
      &:before {
        ",
                      [Function],
                      "
      }
    }
  
    &:first-child{
      &:after {
        ",
                      [Function],
                      "
      }
    }
  


  }


  &.passed{
    background-color: ",
                      [Function],
                      ";
    color: #fff;
    &:after {
      ",
                      [Function],
                      "
    }

    &:before {
      ",
                      [Function],
                      "
     } 

     &:first-child{
      &:before {
        ",
                      [Function],
                      "
      }
    }
  
    &:first-child{
      &:after {
        ",
                      [Function],
                      "
      }
    }
  


  }
  &:after {
    ",
                      [Function],
                      "
    
    }
  }

 &:before {
  ",
                      [Function],
                      "
 } 

  &:first-child{
    &:before {
      ",
                      [Function],
                      "
    }
  }

  &:first-child{
    &:after {
      ",
                      [Function],
                      "
    }
  }

 

  
",
                    ],
                    "staticRulesId": "",
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "shouldForwardProp": undefined,
                  "styledComponentId": "sc-hKFxyN",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": e {
                "baseHash": 1403459420,
                "baseStyle": undefined,
                "componentId": "sc-dlnjwi",
                "isStatic": false,
                "rules": Array [
                  "
  display: flex;
  align-items: start;
  justify-content: start;
  background-color: transparent;
  width: 91%;
  // height: 15rem;
  overflow-x: auto;
  overflow-y: hidden;
    -webkit-overflow-scrolling: touch;
  -ms-overflow-style: none;
  scrollbar-width: none;
  scroll-behavior: smooth;
  &::-webkit-scrollbar {
    display: none;
  }
",
                ],
                "staticRulesId": "",
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "shouldForwardProp": undefined,
              "styledComponentId": "sc-dlnjwi",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <button
                  onClick={[Function]}
                  style={
                    Object {
                      "background": "transparent",
                      "border": "none",
                      "cursor": "pointer",
                      "fontSize": "25px",
                      "marginLeft": ".5rem",
                    }
                  }
                >
                  &lt;
                </button>,
                <button
                  onClick={[Function]}
                  style={
                    Object {
                      "background": "transparent",
                      "border": "none",
                      "cursor": "pointer",
                      "fontSize": "25px",
                    }
                  }
                >
                  &gt;
                </button>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "<",
                  "onClick": [Function],
                  "style": Object {
                    "background": "transparent",
                    "border": "none",
                    "cursor": "pointer",
                    "fontSize": "25px",
                    "marginLeft": ".5rem",
                  },
                },
                "ref": null,
                "rendered": "<",
                "type": "button",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": ">",
                  "onClick": [Function],
                  "style": Object {
                    "background": "transparent",
                    "border": "none",
                    "cursor": "pointer",
                    "fontSize": "25px",
                  },
                },
                "ref": null,
                "rendered": ">",
                "type": "button",
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": e {
                "baseHash": -212392731,
                "baseStyle": undefined,
                "componentId": "sc-iCoGMd",
                "isStatic": false,
                "rules": Array [
                  "
  color: #000;
  display: flex;
  align-items: center;
  margin-top: 1rem;
  justify-content: space-between;
",
                ],
                "staticRulesId": "",
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "shouldForwardProp": undefined,
              "styledComponentId": "sc-iCoGMd",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": e {
            "baseHash": -1974253024,
            "baseStyle": undefined,
            "componentId": "sc-gtsrHT",
            "isStatic": false,
            "rules": Array [
              "
  display: flex;
  align-items: start;
  justify-content: space-between;
  background-color: transparent;
  width: 98%;
  height: auto;
  padding: 5px;
",
            ],
            "staticRulesId": "",
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "shouldForwardProp": undefined,
          "styledComponentId": "sc-gtsrHT",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ForwardRef(styled.div)>
              Sep,16, 2021
            </ForwardRef(styled.div)>,
            <div
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "space-between",
                  "width": "100px",
                }
              }
            >
              <div
                onClick={[Function]}
                style={
                  Object {
                    "cursor": "pointer",
                  }
                }
              >
                <ArrowDownIcon />
              </div>
              <ForwardRef(styled.div)>
                Sep,18, 2021
              </ForwardRef(styled.div)>
            </div>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Sep,16, 2021",
            },
            "ref": null,
            "rendered": "Sep,16, 2021",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": e {
                "baseHash": -852178699,
                "baseStyle": undefined,
                "componentId": "sc-jSFjdj",
                "isStatic": false,
                "rules": Array [
                  "
  font-size: 15px;
",
                ],
                "staticRulesId": "",
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "shouldForwardProp": undefined,
              "styledComponentId": "sc-jSFjdj",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  onClick={[Function]}
                  style={
                    Object {
                      "cursor": "pointer",
                    }
                  }
                >
                  <ArrowDownIcon />
                </div>,
                <ForwardRef(styled.div)>
                  Sep,18, 2021
                </ForwardRef(styled.div)>,
              ],
              "style": Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "space-between",
                "width": "100px",
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <ArrowDownIcon />,
                  "onClick": [Function],
                  "style": Object {
                    "cursor": "pointer",
                  },
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "Sep,18, 2021",
                },
                "ref": null,
                "rendered": "Sep,18, 2021",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": e {
                    "baseHash": -852178699,
                    "baseStyle": undefined,
                    "componentId": "sc-jSFjdj",
                    "isStatic": false,
                    "rules": Array [
                      "
  font-size: 15px;
",
                    ],
                    "staticRulesId": "",
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "shouldForwardProp": undefined,
                  "styledComponentId": "sc-jSFjdj",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
            ],
            "type": "div",
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": e {
            "baseHash": -1076222668,
            "baseStyle": undefined,
            "componentId": "sc-eCApnc",
            "isStatic": false,
            "rules": Array [
              "
  display: flex;
  margin: 1.5rem 0;
  align-items: center;
  justify-content: space-between;
  background-color: transparent;
  width: 98%;
  height: auto;
  padding: 5px;
  color: #000;
",
            ],
            "staticRulesId": "",
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "shouldForwardProp": undefined,
          "styledComponentId": "sc-eCApnc",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": e {
        "baseHash": -715527839,
        "baseStyle": undefined,
        "componentId": "sc-bdnxRM",
        "isStatic": false,
        "rules": Array [
          "
  direction: ",
          [Function],
          ";
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background-color: transparent;
  width: ",
          [Function],
          ";
  padding: 0 20px;
  min-height: 150px;
  height: auto;
  border-radius: 0.5rem;
  box-shadow: rgba(234, 234, 238, 0.4) 0px 7px 29px 0px;
",
        ],
        "staticRulesId": "",
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "shouldForwardProp": undefined,
      "styledComponentId": "sc-bdnxRM",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef(styled.div)>
            <ForwardRef(styled.div)>
              <ForwardRef(styled.div)
                className=""
                color="#FDFDFD"
                onClick={[Function]}
              >
                <span
                  style={
                    Object {
                      "fontSize": "14px",
                      "textAlign": "end",
                    }
                  }
                >
                  test1
                </span>
              </ForwardRef(styled.div)>
              <ForwardRef(styled.div)
                className=""
                color="#000"
                onClick={[Function]}
              >
                <span
                  style={
                    Object {
                      "fontSize": "14px",
                      "textAlign": "end",
                    }
                  }
                >
                  test2
                </span>
              </ForwardRef(styled.div)>
              <ForwardRef(styled.div)
                className=""
                color="green"
                onClick={[Function]}
              >
                <span
                  style={
                    Object {
                      "fontSize": "14px",
                      "textAlign": "end",
                    }
                  }
                >
                  test3
                </span>
              </ForwardRef(styled.div)>
            </ForwardRef(styled.div)>
            <ForwardRef(styled.div)>
              <button
                onClick={[Function]}
                style={
                  Object {
                    "background": "transparent",
                    "border": "none",
                    "cursor": "pointer",
                    "fontSize": "25px",
                    "marginLeft": ".5rem",
                  }
                }
              >
                &lt;
              </button>
              <button
                onClick={[Function]}
                style={
                  Object {
                    "background": "transparent",
                    "border": "none",
                    "cursor": "pointer",
                    "fontSize": "25px",
                  }
                }
              >
                &gt;
              </button>
            </ForwardRef(styled.div)>
          </ForwardRef(styled.div)>,
          <ForwardRef(styled.div)>
            <ForwardRef(styled.div)>
              Sep,16, 2021
            </ForwardRef(styled.div)>
            <div
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "space-between",
                  "width": "100px",
                }
              }
            >
              <div
                onClick={[Function]}
                style={
                  Object {
                    "cursor": "pointer",
                  }
                }
              >
                <ArrowDownIcon />
              </div>
              <ForwardRef(styled.div)>
                Sep,18, 2021
              </ForwardRef(styled.div)>
            </div>
          </ForwardRef(styled.div)>,
        ],
        "dir": undefined,
        "width": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ForwardRef(styled.div)>
                <ForwardRef(styled.div)
                  className=""
                  color="#FDFDFD"
                  onClick={[Function]}
                >
                  <span
                    style={
                      Object {
                        "fontSize": "14px",
                        "textAlign": "end",
                      }
                    }
                  >
                    test1
                  </span>
                </ForwardRef(styled.div)>
                <ForwardRef(styled.div)
                  className=""
                  color="#000"
                  onClick={[Function]}
                >
                  <span
                    style={
                      Object {
                        "fontSize": "14px",
                        "textAlign": "end",
                      }
                    }
                  >
                    test2
                  </span>
                </ForwardRef(styled.div)>
                <ForwardRef(styled.div)
                  className=""
                  color="green"
                  onClick={[Function]}
                >
                  <span
                    style={
                      Object {
                        "fontSize": "14px",
                        "textAlign": "end",
                      }
                    }
                  >
                    test3
                  </span>
                </ForwardRef(styled.div)>
              </ForwardRef(styled.div)>,
              <ForwardRef(styled.div)>
                <button
                  onClick={[Function]}
                  style={
                    Object {
                      "background": "transparent",
                      "border": "none",
                      "cursor": "pointer",
                      "fontSize": "25px",
                      "marginLeft": ".5rem",
                    }
                  }
                >
                  &lt;
                </button>
                <button
                  onClick={[Function]}
                  style={
                    Object {
                      "background": "transparent",
                      "border": "none",
                      "cursor": "pointer",
                      "fontSize": "25px",
                    }
                  }
                >
                  &gt;
                </button>
              </ForwardRef(styled.div)>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <ForwardRef(styled.div)
                    className=""
                    color="#FDFDFD"
                    onClick={[Function]}
                  >
                    <span
                      style={
                        Object {
                          "fontSize": "14px",
                          "textAlign": "end",
                        }
                      }
                    >
                      test1
                    </span>
                  </ForwardRef(styled.div)>,
                  <ForwardRef(styled.div)
                    className=""
                    color="#000"
                    onClick={[Function]}
                  >
                    <span
                      style={
                        Object {
                          "fontSize": "14px",
                          "textAlign": "end",
                        }
                      }
                    >
                      test2
                    </span>
                  </ForwardRef(styled.div)>,
                  <ForwardRef(styled.div)
                    className=""
                    color="green"
                    onClick={[Function]}
                  >
                    <span
                      style={
                        Object {
                          "fontSize": "14px",
                          "textAlign": "end",
                        }
                      }
                    >
                      test3
                    </span>
                  </ForwardRef(styled.div)>,
                ],
              },
              "ref": Object {
                "current": null,
              },
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": Array [
                      undefined,
                      <span
                        style={
                          Object {
                            "fontSize": "14px",
                            "textAlign": "end",
                          }
                        }
                      >
                        test1
                      </span>,
                      undefined,
                    ],
                    "className": "",
                    "color": "#FDFDFD",
                    "dir": undefined,
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": Array [
                    undefined,
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "test1",
                        "style": Object {
                          "fontSize": "14px",
                          "textAlign": "end",
                        },
                      },
                      "ref": null,
                      "rendered": "test1",
                      "type": "span",
                    },
                    undefined,
                  ],
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": e {
                      "baseHash": -417256348,
                      "baseStyle": undefined,
                      "componentId": "sc-hKFxyN",
                      "isStatic": false,
                      "rules": Array [
                        "
  display: flex;
  align-items: center;
  justify-content: space-around;
  padding: 0 25px;
  min-width: 235px;
  width: auto;
  height: 40px;
  font-size: 20px;
  text-align: center;
  position: relative;
  color: #000;
  background: lightgray;
  margin-right: .6rem;
  cursor: pointer;
  &.active{
    background-color: #1D83FD;
    color: #fff;
    &:after {
      ",
                        [Function],
                        "
    }

    &:before {
      ",
                        [Function],
                        "
     } 

     &:first-child{
      &:before {
        ",
                        [Function],
                        "
      }
    }
  
    &:first-child{
      &:after {
        ",
                        [Function],
                        "
      }
    }
  


  }


  &.passed{
    background-color: ",
                        [Function],
                        ";
    color: #fff;
    &:after {
      ",
                        [Function],
                        "
    }

    &:before {
      ",
                        [Function],
                        "
     } 

     &:first-child{
      &:before {
        ",
                        [Function],
                        "
      }
    }
  
    &:first-child{
      &:after {
        ",
                        [Function],
                        "
      }
    }
  


  }
  &:after {
    ",
                        [Function],
                        "
    
    }
  }

 &:before {
  ",
                        [Function],
                        "
 } 

  &:first-child{
    &:before {
      ",
                        [Function],
                        "
    }
  }

  &:first-child{
    &:after {
      ",
                        [Function],
                        "
    }
  }

 

  
",
                      ],
                      "staticRulesId": "",
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "shouldForwardProp": undefined,
                    "styledComponentId": "sc-hKFxyN",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": Array [
                      undefined,
                      <span
                        style={
                          Object {
                            "fontSize": "14px",
                            "textAlign": "end",
                          }
                        }
                      >
                        test2
                      </span>,
                      undefined,
                    ],
                    "className": "",
                    "color": "#000",
                    "dir": undefined,
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": Array [
                    undefined,
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "test2",
                        "style": Object {
                          "fontSize": "14px",
                          "textAlign": "end",
                        },
                      },
                      "ref": null,
                      "rendered": "test2",
                      "type": "span",
                    },
                    undefined,
                  ],
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": e {
                      "baseHash": -417256348,
                      "baseStyle": undefined,
                      "componentId": "sc-hKFxyN",
                      "isStatic": false,
                      "rules": Array [
                        "
  display: flex;
  align-items: center;
  justify-content: space-around;
  padding: 0 25px;
  min-width: 235px;
  width: auto;
  height: 40px;
  font-size: 20px;
  text-align: center;
  position: relative;
  color: #000;
  background: lightgray;
  margin-right: .6rem;
  cursor: pointer;
  &.active{
    background-color: #1D83FD;
    color: #fff;
    &:after {
      ",
                        [Function],
                        "
    }

    &:before {
      ",
                        [Function],
                        "
     } 

     &:first-child{
      &:before {
        ",
                        [Function],
                        "
      }
    }
  
    &:first-child{
      &:after {
        ",
                        [Function],
                        "
      }
    }
  


  }


  &.passed{
    background-color: ",
                        [Function],
                        ";
    color: #fff;
    &:after {
      ",
                        [Function],
                        "
    }

    &:before {
      ",
                        [Function],
                        "
     } 

     &:first-child{
      &:before {
        ",
                        [Function],
                        "
      }
    }
  
    &:first-child{
      &:after {
        ",
                        [Function],
                        "
      }
    }
  


  }
  &:after {
    ",
                        [Function],
                        "
    
    }
  }

 &:before {
  ",
                        [Function],
                        "
 } 

  &:first-child{
    &:before {
      ",
                        [Function],
                        "
    }
  }

  &:first-child{
    &:after {
      ",
                        [Function],
                        "
    }
  }

 

  
",
                      ],
                      "staticRulesId": "",
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "shouldForwardProp": undefined,
                    "styledComponentId": "sc-hKFxyN",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": Array [
                      undefined,
                      <span
                        style={
                          Object {
                            "fontSize": "14px",
                            "textAlign": "end",
                          }
                        }
                      >
                        test3
                      </span>,
                      undefined,
                    ],
                    "className": "",
                    "color": "green",
                    "dir": undefined,
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": Array [
                    undefined,
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "test3",
                        "style": Object {
                          "fontSize": "14px",
                          "textAlign": "end",
                        },
                      },
                      "ref": null,
                      "rendered": "test3",
                      "type": "span",
                    },
                    undefined,
                  ],
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": e {
                      "baseHash": -417256348,
                      "baseStyle": undefined,
                      "componentId": "sc-hKFxyN",
                      "isStatic": false,
                      "rules": Array [
                        "
  display: flex;
  align-items: center;
  justify-content: space-around;
  padding: 0 25px;
  min-width: 235px;
  width: auto;
  height: 40px;
  font-size: 20px;
  text-align: center;
  position: relative;
  color: #000;
  background: lightgray;
  margin-right: .6rem;
  cursor: pointer;
  &.active{
    background-color: #1D83FD;
    color: #fff;
    &:after {
      ",
                        [Function],
                        "
    }

    &:before {
      ",
                        [Function],
                        "
     } 

     &:first-child{
      &:before {
        ",
                        [Function],
                        "
      }
    }
  
    &:first-child{
      &:after {
        ",
                        [Function],
                        "
      }
    }
  


  }


  &.passed{
    background-color: ",
                        [Function],
                        ";
    color: #fff;
    &:after {
      ",
                        [Function],
                        "
    }

    &:before {
      ",
                        [Function],
                        "
     } 

     &:first-child{
      &:before {
        ",
                        [Function],
                        "
      }
    }
  
    &:first-child{
      &:after {
        ",
                        [Function],
                        "
      }
    }
  


  }
  &:after {
    ",
                        [Function],
                        "
    
    }
  }

 &:before {
  ",
                        [Function],
                        "
 } 

  &:first-child{
    &:before {
      ",
                        [Function],
                        "
    }
  }

  &:first-child{
    &:after {
      ",
                        [Function],
                        "
    }
  }

 

  
",
                      ],
                      "staticRulesId": "",
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "shouldForwardProp": undefined,
                    "styledComponentId": "sc-hKFxyN",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": e {
                  "baseHash": 1403459420,
                  "baseStyle": undefined,
                  "componentId": "sc-dlnjwi",
                  "isStatic": false,
                  "rules": Array [
                    "
  display: flex;
  align-items: start;
  justify-content: start;
  background-color: transparent;
  width: 91%;
  // height: 15rem;
  overflow-x: auto;
  overflow-y: hidden;
    -webkit-overflow-scrolling: touch;
  -ms-overflow-style: none;
  scrollbar-width: none;
  scroll-behavior: smooth;
  &::-webkit-scrollbar {
    display: none;
  }
",
                  ],
                  "staticRulesId": "",
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "shouldForwardProp": undefined,
                "styledComponentId": "sc-dlnjwi",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <button
                    onClick={[Function]}
                    style={
                      Object {
                        "background": "transparent",
                        "border": "none",
                        "cursor": "pointer",
                        "fontSize": "25px",
                        "marginLeft": ".5rem",
                      }
                    }
                  >
                    &lt;
                  </button>,
                  <button
                    onClick={[Function]}
                    style={
                      Object {
                        "background": "transparent",
                        "border": "none",
                        "cursor": "pointer",
                        "fontSize": "25px",
                      }
                    }
                  >
                    &gt;
                  </button>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "<",
                    "onClick": [Function],
                    "style": Object {
                      "background": "transparent",
                      "border": "none",
                      "cursor": "pointer",
                      "fontSize": "25px",
                      "marginLeft": ".5rem",
                    },
                  },
                  "ref": null,
                  "rendered": "<",
                  "type": "button",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": ">",
                    "onClick": [Function],
                    "style": Object {
                      "background": "transparent",
                      "border": "none",
                      "cursor": "pointer",
                      "fontSize": "25px",
                    },
                  },
                  "ref": null,
                  "rendered": ">",
                  "type": "button",
                },
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": e {
                  "baseHash": -212392731,
                  "baseStyle": undefined,
                  "componentId": "sc-iCoGMd",
                  "isStatic": false,
                  "rules": Array [
                    "
  color: #000;
  display: flex;
  align-items: center;
  margin-top: 1rem;
  justify-content: space-between;
",
                  ],
                  "staticRulesId": "",
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "shouldForwardProp": undefined,
                "styledComponentId": "sc-iCoGMd",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": e {
              "baseHash": -1974253024,
              "baseStyle": undefined,
              "componentId": "sc-gtsrHT",
              "isStatic": false,
              "rules": Array [
                "
  display: flex;
  align-items: start;
  justify-content: space-between;
  background-color: transparent;
  width: 98%;
  height: auto;
  padding: 5px;
",
              ],
              "staticRulesId": "",
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "shouldForwardProp": undefined,
            "styledComponentId": "sc-gtsrHT",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ForwardRef(styled.div)>
                Sep,16, 2021
              </ForwardRef(styled.div)>,
              <div
                style={
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "space-between",
                    "width": "100px",
                  }
                }
              >
                <div
                  onClick={[Function]}
                  style={
                    Object {
                      "cursor": "pointer",
                    }
                  }
                >
                  <ArrowDownIcon />
                </div>
                <ForwardRef(styled.div)>
                  Sep,18, 2021
                </ForwardRef(styled.div)>
              </div>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Sep,16, 2021",
              },
              "ref": null,
              "rendered": "Sep,16, 2021",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": e {
                  "baseHash": -852178699,
                  "baseStyle": undefined,
                  "componentId": "sc-jSFjdj",
                  "isStatic": false,
                  "rules": Array [
                    "
  font-size: 15px;
",
                  ],
                  "staticRulesId": "",
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "shouldForwardProp": undefined,
                "styledComponentId": "sc-jSFjdj",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    onClick={[Function]}
                    style={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                  >
                    <ArrowDownIcon />
                  </div>,
                  <ForwardRef(styled.div)>
                    Sep,18, 2021
                  </ForwardRef(styled.div)>,
                ],
                "style": Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "space-between",
                  "width": "100px",
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <ArrowDownIcon />,
                    "onClick": [Function],
                    "style": Object {
                      "cursor": "pointer",
                    },
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "Sep,18, 2021",
                  },
                  "ref": null,
                  "rendered": "Sep,18, 2021",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": e {
                      "baseHash": -852178699,
                      "baseStyle": undefined,
                      "componentId": "sc-jSFjdj",
                      "isStatic": false,
                      "rules": Array [
                        "
  font-size: 15px;
",
                      ],
                      "staticRulesId": "",
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "shouldForwardProp": undefined,
                    "styledComponentId": "sc-jSFjdj",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
              ],
              "type": "div",
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": e {
              "baseHash": -1076222668,
              "baseStyle": undefined,
              "componentId": "sc-eCApnc",
              "isStatic": false,
              "rules": Array [
                "
  display: flex;
  margin: 1.5rem 0;
  align-items: center;
  justify-content: space-between;
  background-color: transparent;
  width: 98%;
  height: auto;
  padding: 5px;
  color: #000;
",
              ],
              "staticRulesId": "",
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "shouldForwardProp": undefined,
            "styledComponentId": "sc-eCApnc",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": e {
          "baseHash": -715527839,
          "baseStyle": undefined,
          "componentId": "sc-bdnxRM",
          "isStatic": false,
          "rules": Array [
            "
  direction: ",
            [Function],
            ";
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background-color: transparent;
  width: ",
            [Function],
            ";
  padding: 0 20px;
  min-height: 150px;
  height: auto;
  border-radius: 0.5rem;
  box-shadow: rgba(234, 234, 238, 0.4) 0px 7px 29px 0px;
",
          ],
          "staticRulesId": "",
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "shouldForwardProp": undefined,
        "styledComponentId": "sc-bdnxRM",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
